import maya.cmds as cmdsdef bdConnectSwitch(root,mdNode,revNode):	parentCnstr = cmds.listRelatives(root,c=True, typ = 'parentConstraint')	cRoot = cmds.listRelatives(root, c=True, typ = 'joint')		#check for a parent constraint	if parentCnstr != None:		attr = cmds.listAttr(parentCnstr, v=True,ud=True)		#check for a child		if cRoot != None:			#everything in place, connecting			cmds.connectAttr(mdNode + '.outputX',(str(parentCnstr[0]) + "." + str(attr[0])),force=True)			cmds.connectAttr(revNode + '.outputX',(str(parentCnstr[0]) + "." + str(attr[1])),force=True)			bdConnectSwitch(cRoot,mdNode,revNode)		#requires def bdRecursiveIKFKSwitch(side,limb):	selection = cmds.ls(sl=True)		print selection[0]	cmds.addAttr( selection[0] ,ln="IKFK" ,at='long'  ,min=0 ,max=1 ,dv=0)	cmds.setAttr((selection[0] + "." + 'IKFK'),keyable=True)		multDivName = side + '_' + limb + '_' + '_ikfkSwitchMD'	revName = side + '_' + limb + '_' + '_switchRev'	multDivNode = cmds.createNode('multiplyDivide',name= multDivName)	revNode = cmds.createNode('reverse',name= revName )		cmds.connectAttr((selection[0] + '.IKFK'),multDivName + '.input1X',force=True)	cmds.connectAttr( multDivName+ '.outputX',revName + '.inputX',force=True)		bdConnectSwitch(selection[1],multDivName,revName)